{"ast":null,"code":"var _jsxFileName = \"/Users/huhdongwu/Documents/twitter/prepare/front/pages/signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Signup = () => {\n  const {\n    0: id,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: nickname,\n    1: setNickname\n  } = useState(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const FormStyle = useMemo(() => ({\n    padding: \"10px\"\n  }), []);\n  const onSubmitForm = useCallback(() => {\n    console.log(\"here\");\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n  const onChangeTerm = useCallback(e => {\n    setTerm(e.target.checked);\n  }, []);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"\\uAC00\\uC785\\uD558\\uAE30 | \\uD2B8\\uC704\\uD130\")), __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Form, {\n    style: FormStyle,\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    label: \"\\uC544\\uC774\\uB514\",\n    name: \"user-id\",\n    value: id,\n    rules: [{\n      required: true,\n      message: \"아이디를 입력해주세요!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"\\uB2C9\\uB124\\uC784\",\n    name: \"user-nickname\",\n    value: nickname,\n    rules: [{\n      required: true,\n      message: \"닉네임을 입력해주세요!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    name: \"user-password\",\n    value: password,\n    onChange: onChangePassword,\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해주세요!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\\uD655\\uC778\",\n    name: \"user-password-check\",\n    value: passwordCheck,\n    onChange: onChangePasswordCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), passwordError && __jsx(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"\\uB3D9\\uC6B0\\uC640 \\uCE5C\\uD574\\uC9C0\\uAE30 \\uC704\\uD574 \\uB178\\uB825\\uD560 \\uAC83\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(ErrorMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/huhdongwu/Documents/twitter/prepare/front/pages/signup.js"],"names":["AppLayout","Head","useCallback","useMemo","useState","Form","Input","Checkbox","Button","styled","useInput","ErrorMessage","div","Signup","id","setId","nickname","setNickname","password","onChangePassword","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","FormStyle","padding","onSubmitForm","console","log","onChangeTerm","e","target","checked","onChangePasswordCheck","value","required","message"],"mappings":"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","sourcesContent":["import AppLayout from \"../components/AppLayout\";\nimport Head from \"next/head\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport useInput from \"../hooks/useInput\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nconst Signup = () => {\n  const [id, setId] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [term, setTerm] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const FormStyle = useMemo(() => ({ padding: \"10px\" }), []);\n  const onSubmitForm = useCallback(() => {\n    console.log(\"here\");\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(id, nickname, password);\n  }, [password, passwordCheck, term]);\n\n  const onChangeTerm = useCallback((e) => {\n    setTerm(e.target.checked);\n  }, []);\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordError(e.target.value !== password);\n      setPasswordCheck(e.target.value);\n    },\n    [password]\n  );\n\n  return (\n    <>\n      <Head>\n        <title>가입하기 | 트위터</title>\n      </Head>\n      <AppLayout>\n        <Form style={FormStyle} onFinish={onSubmitForm}>\n          <Form.Item\n            label=\"아이디\"\n            name=\"user-id\"\n            value={id}\n            rules={[\n              {\n                required: true,\n                message: \"아이디를 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"닉네임\"\n            name=\"user-nickname\"\n            value={nickname}\n            rules={[\n              {\n                required: true,\n                message: \"닉네임을 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호\"\n            name=\"user-password\"\n            value={password}\n            onChange={onChangePassword}\n            rules={[\n              {\n                required: true,\n                message: \"비밀번호를 입력해주세요!\",\n              },\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            label=\"비밀번호확인\"\n            name=\"user-password-check\"\n            value={passwordCheck}\n            onChange={onChangePasswordCheck}\n          >\n            <Input.Password />\n            {passwordError && (\n              <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\n              동우와 친해지기 위해 노력할 것에 동의합니다.\n            </Checkbox>\n            {termError && (\n              <ErrorMessage>약관에 동의하셔야 합니다.</ErrorMessage>\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              회원가입\n            </Button>\n          </Form.Item>\n        </Form>\n      </AppLayout>\n    </>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}