{"ast":null,"code":"var _jsxFileName = \"/Users/huhdongwu/Documents/twitter/prepare/front/components/LoginForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo, useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const {\n    0: id,\n    1: setId\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const FormStyle = useMemo(() => ({\n    padding: \"10px\"\n  }), []);\n  const InputStyle = useMemo(() => ({\n    width: \"250px\"\n  }), []);\n  const ButtonStyle = useMemo(() => ({\n    marginRight: \"10px\"\n  }), []);\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password); // setIsLoggedIn(true);\n\n    dispatch(loginAction({\n      id,\n      password\n    }));\n  }, [id, password]);\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    style: FormStyle,\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Item, {\n    label: \"\\uC544\\uC774\\uB514\",\n    name: \"user-id\",\n    value: id,\n    rules: [{\n      required: true,\n      message: \"아이디를 입력해주세요!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    style: InputStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n    name: \"user-password\",\n    value: password,\n    rules: [{\n      required: true,\n      message: \"비밀번호를 입력해주세요!\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Input.Password, {\n    style: InputStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    style: ButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    style: ButtonStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"))))));\n}; // LoginForm.propTypes = {\n//   setIsLoggedIn: PropTypes.func.isRequired,\n// };\n\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/huhdongwu/Documents/twitter/prepare/front/components/LoginForm.js"],"names":["useState","useMemo","useCallback","Form","Input","Button","Link","PropTypes","useDispatch","loginAction","LoginForm","dispatch","id","setId","password","setPassword","FormStyle","padding","InputStyle","width","ButtonStyle","marginRight","onSubmitForm","console","log","required","message"],"mappings":"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","sourcesContent":["import { useState, useMemo, useCallback } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers'; \n\nconst LoginForm = () => {\n  const dispatch = useDispatch(); \n\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const FormStyle = useMemo(() => ({ padding: \"10px\" }), []);\n  const InputStyle = useMemo(() => ({ width: \"250px\" }), []);\n  const ButtonStyle = useMemo(() => ({ marginRight: \"10px\" }), []);\n\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    // setIsLoggedIn(true);\n    dispatch(loginAction({ id, password }));\n  }, [id, password]);\n\n  return (\n    <>\n      <Form style={FormStyle} onFinish={onSubmitForm}>\n        <Form.Item\n          label=\"아이디\"\n          name=\"user-id\"\n          value={id}\n          rules={[\n            {\n              required: true,\n              message: \"아이디를 입력해주세요!\",\n            },\n          ]}\n        >\n          <Input style={InputStyle} />\n        </Form.Item>\n        <Form.Item\n          label=\"비밀번호\"\n          name=\"user-password\"\n          value={password}\n          rules={[\n            {\n              required: true,\n              message: \"비밀번호를 입력해주세요!\",\n            },\n          ]}\n        >\n          <Input.Password style={InputStyle} />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" style={ButtonStyle}>\n            로그인\n          </Button>\n          <Link href=\"/signup\">\n            <a>\n              <Button style={ButtonStyle}>회원가입</Button>\n            </a>\n          </Link>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\n// LoginForm.propTypes = {\n//   setIsLoggedIn: PropTypes.func.isRequired,\n// };\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}