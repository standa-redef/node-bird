{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  mainPosts: [{\n    id: 1,\n    content: \"첫 번째 게시글 #자바스크립트 #프론트엔드\",\n    User: {\n      id: 1,\n      nickname: \"동우\"\n    },\n    Images: [{\n      src: \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\"\n    }, {\n      src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\"\n    }, {\n      src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\"\n    }],\n    Comments: [{\n      User: {\n        nickname: \"제로초\"\n      },\n      content: \"동우씨 대단해요~\"\n    }, {\n      User: {\n        nickname: \"김첨지\"\n      },\n      content: \"취업 가즈아~!\"\n    }]\n  }],\n  imagePaths: [],\n  postAdded: false\n};\nvar ADD_POST = \"ADD_POST\";\nexport var addPost = {\n  type: ADD_POST\n};\nvar dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  },\n  Images: [],\n  Comments: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          mainPosts: [dummyPost].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/huhdongwu/Documents/twitter/prepare/front/reducers/post.js"],"names":["initialState","mainPosts","id","content","User","nickname","Images","src","Comments","imagePaths","postAdded","ADD_POST","addPost","type","dummyPost","reducer","state","action"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AAC1BC,EAAAA,SAAS,EAAE,CACT;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,OAAO,EAAE,yBAFX;AAGEC,IAAAA,IAAI,EAAE;AACJF,MAAAA,EAAE,EAAE,CADA;AAEJG,MAAAA,QAAQ,EAAE;AAFN,KAHR;AAOEC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,GAAG,EACD;AAFJ,KADM,EAKN;AACEA,MAAAA,GAAG,EAAE;AADP,KALM,EAQN;AACEA,MAAAA,GAAG,EAAE;AADP,KARM,CAPV;AAmBEC,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEF,MAAAA,OAAO,EAAE;AAJX,KADQ,EAOR;AACEC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AADN,OADR;AAIEF,MAAAA,OAAO,EAAE;AAJX,KAPQ;AAnBZ,GADS,CADe;AAqC1BM,EAAAA,UAAU,EAAE,EArCc;AAsC1BC,EAAAA,SAAS,EAAE;AAtCe,CAArB;AAyCP,IAAMC,QAAQ,GAAG,UAAjB;AAEA,OAAO,IAAMC,OAAO,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAhB;AAIP,IAAMG,SAAS,GAAG;AAChBZ,EAAAA,EAAE,EAAE,CADY;AAEhBC,EAAAA,OAAO,EAAE,WAFO;AAGhBC,EAAAA,IAAI,EAAE;AACJF,IAAAA,EAAE,EAAE,CADA;AAEJG,IAAAA,QAAQ,EAAE;AAFN,GAHU;AAOhBC,EAAAA,MAAM,EAAE,EAPQ;AAQhBE,EAAAA,QAAQ,EAAE;AARM,CAAlB;;AAWA,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AAChD,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,QAAL;AAAe;AACb,+CACKK,KADL;AAEEf,UAAAA,SAAS,GAAGa,SAAH,4BAAiBE,KAAK,CAACf,SAAvB,EAFX;AAGES,UAAAA,SAAS,EAAE;AAHb;AAKD;;AACD;AACE,aAAOM,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  mainPosts: [\n    {\n      id: 1,\n      content: \"첫 번째 게시글 #자바스크립트 #프론트엔드\",\n      User: {\n        id: 1,\n        nickname: \"동우\",\n      },\n      Images: [\n        {\n          src:\n            \"https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726\",\n        },\n        {\n          src: \"https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg\",\n        },\n        {\n          src: \"https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg\",\n        },\n      ],\n      Comments: [\n        {\n          User: {\n            nickname: \"제로초\",\n          },\n          content: \"동우씨 대단해요~\",\n        },\n        {\n          User: {\n            nickname: \"김첨지\",\n          },\n          content: \"취업 가즈아~!\",\n        },\n      ],\n    },\n  ],\n  imagePaths: [],\n  postAdded: false,\n};\n\nconst ADD_POST = \"ADD_POST\";\n\nexport const addPost = {\n  type: ADD_POST,\n};\n\nconst dummyPost = {\n  id: 2,\n  content: \"더미데이터입니다.\",\n  User: {\n    id: 1,\n    nickname: \"제로초\",\n  },\n  Images: [],\n  Comments: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST: {\n      return {\n        ...state,\n        mainPosts: [dummyPost, ...state.mainPosts],\n        postAdded: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}